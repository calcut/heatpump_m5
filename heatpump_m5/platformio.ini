; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; default_envs = emulator_64bits
default_envs = m5stack-core2

[env:m5stack-core2]
platform = espressif32
board = m5stack-core2
framework = arduino
build_src_filter = 
	+<*>
	-<main_emulator.cpp>
  	+<main_m5stack_core2.cpp>

lib_deps = 
	blues/Blues Notecard Environment Variable Manager@^1.0.0
	blues/Blues Wireless Notecard@^1.4.5
	m5stack/M5Core2@^0.1.5
	https://github.com/m5stack/ArduinoModbus
	https://github.com/m5stack/ArduinoRS485
	lvgl/lvgl@^8.3.7
	mairas/ReactESP@^2.1.0
	bblanchon/ArduinoJson@^6.21.3
monitor_speed = 115200
build_flags = 
	-D BOARD_HAS_PSRAM
	-D LV_CONF_INCLUDE_SIMPLE
	-include src/lv_conf.h
	-I hal/m5stack-core2

board_build.partitions = default_16MB.csv


[env:emulator_64bits]
lib_archive = no
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py

build_flags =
  	${env.build_flags}
	-std=c++11
  	-D SIMULATOR
	-D LV_CONF_SKIP
	; -D LV_CONF_PATH=../src/lv_conf.h

	; Enable LVGL demo, remove when working on your own project
	-D LV_USE_DEMO_WIDGETS=1
	; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
	-D LV_LOG_PRINTF=1
	-I hal/sdl2

	-l SDL2
	; SDL drivers options
	-D LV_LVGL_H_INCLUDE_SIMPLE
	-D LV_DRV_NO_CONF
	-D USE_SDL
	; -D SDL_HOR_RES=480
	; -D SDL_VER_RES=320  
	-D SDL_HOR_RES=320
	-D SDL_VER_RES=280  
	-D SDL_ZOOM=1
	-D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
	-I /opt/homebrew/Cellar/sdl2/2.28.1/include
	-L /opt/homebrew/Cellar/sdl2/2.28.1/lib

	-I /opt/homebrew/Cellar/libmodbus/3.1.10/include/modbus/
	-L /opt/homebrew/Cellar/libmodbus/3.1.10/lib

	; LVGL memory options, setup for the demo to run properly
	-D LV_MEM_CUSTOM=1
	-D LV_MEM_SIZE="(128U * 1024U)"

	-D LV_FONT_MONTSERRAT_14=1 
	-D LV_FONT_MONTSERRAT_16=1
	-D LV_FONT_MONTSERRAT_20=1
	-D LV_FONT_MONTSERRAT_48=1
  
lib_deps =
	blues/Blues Notecard Environment Variable Manager@^1.0.0
	blues/Blues Wireless Notecard@^1.4.5
	m5stack/M5Core2@^0.1.5
	https://github.com/m5stack/ArduinoModbus
	https://github.com/m5stack/ArduinoRS485
	lvgl/lvgl@^8.3.7
	mairas/ReactESP@^2.1.0
	bblanchon/ArduinoJson@^6.21.3
  	; Use direct URL, because package registry is unstable
	; lvgl=https://github.com/lvgl/lvgl/archive/refs/tags/v8.2.0.zip
	; lvgl/lvgl@^8.3.7
	lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.2.0.zip
	ArduinoFake

build_src_filter =
  +<*>
  +<main_emulator.cpp>
  -<main_m5stack-core2.cpp>
  +<../hal/sdl2>
  ; Force compile LVGL demo, remove when working on your own project
  +<../.pio/libdeps/emulator_64bits/lvgl/demos>



[env:emulator_64bits_demo]
lib_archive = false

platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  -D LV_CONF_SKIP
  -D LV_CONF_INCLUDE_SIMPLE
  ; Enable LVGL demo, remove when working on your own project
  -D LV_USE_DEMO_WIDGETS=1
  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  -I hal/sdl2_demo
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -D SDL_HOR_RES=480
  -D SDL_VER_RES=320  
  -D SDL_ZOOM=1
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
  -I /opt/homebrew/Cellar/sdl2/2.28.1/include
  -L /opt/homebrew/Cellar/sdl2/2.28.1/lib

  ; LVGL memory options, setup for the demo to run properly
  -D LV_MEM_CUSTOM=1
  -D LV_MEM_SIZE="(128U * 1024U)"
  
lib_deps =
;   ${env.lib_deps}

  lvgl=https://github.com/lvgl/lvgl/archive/refs/tags/v8.2.0.zip

  ; Use direct URL, because package registry is unstable
  ;lv_drivers@~7.9.0
  lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.2.0.zip
build_src_filter =
  +<main_emulator.cpp>
  -<lib/*>
  +<../hal/sdl2_demo>
  ; Force compile LVGL demo, remove when working on your own project
  +<../.pio/libdeps/emulator_64bits/lvgl/demos>
